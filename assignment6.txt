ASSIGNMENT 3
DAY 3



Data types in JAVA SCRIPT

   * There are eight basic data types in JavaScript.
   * A variable can at one moment be a string and then store a number.
   * The eight basic data types are as follows

      1.Number
      2.BigInt
      3.String
      4.Boolean (logical type)
      5.The “null” value
      6.The “undefined” value
      7.Objects and Symbols
      8.The typeof operator

1. Number

    * The number type represents both integer and floating point numbers.
    * There are many operations for numbers, 
    
    e.g. multiplication *, division /, addition +, subtraction -, and so on.

    * Besides regular numbers, there are so-called “special numeric values”
      which also belong to this data type: Infinity, -Infinity and NaN.

2. BigInt

    * In JavaScript, the “number” type cannot represent integer values larger than 
      (253-1) (that’s 9007199254740991), or less than -(-253-1) for negatives.
 
    * It’s a technical limitation caused by their internal representation.

    * For most purposes that’s quite enough, but sometimes we need really big numbers, 
    
    e.g. for cryptography or microsecond-precision timestamps.

    * BigInt type was recently added to the language to represent integers of arbitrary length.

    * A BigInt value is created by appending n to the end of an integer:

3. String

    * A string in JavaScript must be surrounded by quotes.

    * In JavaScript, there are 3 types of quotes. 
      1.Double quotes: "Hello".
      2.Single quotes: 'Hello'.
      3.Backticks: `Hello`.

    * Double and single quotes are “simple” quotes. 
   
    * There’s practically no difference between them in JavaScript.

    * Backticks are “extended functionality” quotes. 
    
    * They allow us to embed variables and expressions into a string by wrapping them in ${…}


4. Boolean (logical type)

    * The boolean type has only two values: true and false.

    * This type is commonly used to store yes/no values: 
      true means “yes, correct”, and false means “no, incorrect”.

5. The “null” value

    * The special null value does not belong to any of the types described above.

    * It forms a separate type of its own which contains only the null value:

      let age = null;
    
    * In JavaScript, null is not a “reference to a non-existing object” or a 
      “null pointer” like in some other languages.

    * It’s just a special value which represents “nothing”, “empty” or “value unknown”.

    * The code above states that age is unknown.


6. The “undefined” value

    * The special value undefined also stands apart. 

    * It makes a type of its own, just like null.

    * The meaning of undefined is “value is not assigned”.

    * If a variable is declared, but not assigned, then its value is undefined.


7. Objects and Symbols

    * The object type is special.

    * All other types are called “primitive” because their values can contain only a 
      single thing (be it a string or a number or whatever). 
   
    * In contrast, objects are used to store collections of data and more complex entities.

    * Being that important, objects deserve a special treatment. 
  
    * We’ll deal with them later in the chapter Objects, after we learn more about primitives.

    * The symbol type is used to create unique identifiers for objects. 

    * We have to mention it here for the sake of completeness, 
      but also postpone the details till we know objects.


8. The typeof operator

    * The typeof operator returns the type of the argument. 
    
    * It’s useful when we want to process values of different types 
      differently or just want to do a quick check.

    * It supports two forms of syntax:

          As an operator: typeof x.
          As a function: typeof(x).
 
    * In other words, it works with parentheses or without them. The result is the same.

    * The call to typeof x returns a string with the type name:
















